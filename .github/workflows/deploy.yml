name: üöÄ Production Deploy

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
  workflow_dispatch:

concurrency:
  group: production-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read
  deployments: write

env:
  NODE_VERSION: '20'
  SSH_HOST: '147.79.84.222'
  SSH_PORT: '65002'
  SSH_USER: 'u790739895'
  SSH_KEY_PATH: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build:
    name: üèóÔ∏è Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    outputs:
      status: ${{ job.status }}
      hash: ${{ steps.hash.outputs.value }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - id: hash
        run: echo "value=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - run: npm ci --prefer-offline --no-audit

      - run: npm run generate-sitemaps 2>&1 || true
        continue-on-error: true

      - run: npm run build
        env:
          NODE_ENV: production
          VITE_WP_SITE_URL: https://djzeneyer.com
          VITE_WP_REST_URL: https://djzeneyer.com/wp-json/
          VITE_WC_CONSUMER_KEY: ${{ secrets.VITE_WC_CONSUMER_KEY }}
          VITE_WC_CONSUMER_SECRET: ${{ secrets.VITE_WC_CONSUMER_SECRET }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}

      - run: [ -d dist ] && [ -f dist/index.html ] || exit 1

      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ steps.hash.outputs.value }}
          path: dist/
          retention-days: 7
          compression-level: 9

  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    if: needs.build.outputs.status == 'success'
    
    environment:
      name: production
      url: https://djzeneyer.com

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build-${{ needs.build.outputs.hash }}
          path: dist/

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ env.SSH_PORT }} ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts 2>/dev/null || true
          cat > ~/.ssh/config << 'SSHCFG'
          Host prod
            HostName ${{ env.SSH_HOST }}
            Port ${{ env.SSH_PORT }}
            User ${{ env.SSH_USER }}
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking accept-new
            ConnectTimeout 10
            ServerAliveInterval 60
            ServerAliveCountMax 3
          SSHCFG
          chmod 600 ~/.ssh/config

      - name: Test SSH & Create Dirs
        run: |
          ssh prod "pwd && whoami && mkdir -p ./wp-content/themes/zentheme/dist ./wp-content/plugins && echo OK"

      - name: Deploy React Build
        run: |
          rsync -avz --delete \
            -e "ssh -o ConnectTimeout=10" \
            dist/ \
            prod:./wp-content/themes/zentheme/dist/ || exit 1

      - name: Deploy Theme Root
        run: |
          rsync -avz --delete \
            -e "ssh -o ConnectTimeout=10" \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='dist' \
            --exclude='public' \
            --exclude='src' \
            --exclude='.github' \
            --exclude='scripts' \
            --exclude='package*.json' \
            --exclude='tsconfig*.json' \
            --exclude='vite.config.*' \
            --exclude='eslint.config.*' \
            --exclude='postcss.config.*' \
            --exclude='tailwind.config.*' \
            --exclude='*.md' \
            --exclude='wp-content' \
            --exclude='.env*' \
            --exclude='.DS_Store' \
            --exclude='*.log' \
            --exclude='.editorconfig' \
            --exclude='.prettierrc*' \
            ./ \
            prod:./wp-content/themes/zentheme/ || exit 1

      - name: Deploy Plugins
        if: hashFiles('plugins/**') != ''
        run: |
          rsync -avz \
            -e "ssh -o ConnectTimeout=10" \
            plugins/ \
            prod:./wp-content/plugins/ || exit 1

      - name: Deploy Sitemaps
        if: hashFiles('dist/sitemap*.xml') != ''
        run: |
          rsync -avz \
            --include='sitemap*.xml' \
            --exclude='*' \
            -e "ssh -o ConnectTimeout=10" \
            dist/ \
            prod:./ || exit 1

      - name: Deploy Public Assets
        run: |
          rsync -avz \
            --include='robots.txt' \
            --include='favicon*' \
            --include='*.ico' \
            --include='*.svg' \
            --include='*.webmanifest' \
            --exclude='*' \
            -e "ssh -o ConnectTimeout=10" \
            dist/ \
            prod:./ || exit 1

      - name: Verify Deployment
        run: |
          echo "Verifying deployed files..."
          ssh prod << 'VERIFY'
          set -e
          echo "PWD: $(pwd)"
          echo "User: $(whoami)"
          echo ""
          echo "Theme dir:"
          [ -d ./wp-content/themes/zentheme ] && echo "  ‚úì theme exists" || echo "  ‚úó theme missing"
          [ -d ./wp-content/themes/zentheme/dist ] && echo "  ‚úì dist exists" || echo "  ‚úó dist missing"
          [ -f ./wp-content/themes/zentheme/index.php ] && echo "  ‚úì index.php exists" || echo "  ‚úó index.php missing"
          echo ""
          echo "Plugins:"
          [ -d ./wp-content/plugins ] && echo "  ‚úì plugins folder exists" || echo "  ‚úó plugins missing"
          PLUGIN_COUNT=$(find ./wp-content/plugins -maxdepth 1 -type d ! -name plugins | wc -l)
          echo "  Plugins: $PLUGIN_COUNT"
          echo ""
          echo "Root files:"
          [ -f ./robots.txt ] && echo "  ‚úì robots.txt" || echo "  ‚úó robots.txt"
          SITEMAPS=$(find . -maxdepth 1 -name 'sitemap*.xml' 2>/dev/null | wc -l)
          echo "  Sitemaps: $SITEMAPS"
          [ -f ./favicon.ico ] && echo "  ‚úì favicon.ico" || echo "  ‚úó favicon.ico"
          echo ""
          echo "Disk usage:"
          du -sh ./wp-content/themes/zentheme 2>/dev/null | awk '{print "  Theme: " $1}'
          VERIFY

      - name: Cleanup SSH
        if: always()
        run: rm -f ~/.ssh/id_rsa ~/.ssh/config

      - name: Deploy Status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "‚úÖ Deploy successful - https://djzeneyer.com"
          else
            echo "‚ùå Deploy failed"
            exit 1
          fi
