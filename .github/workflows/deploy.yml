name: 🚀 Production Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: production-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

env:
  NODE_VERSION: '20'
  SSH_HOST: '147.79.84.222'
  SSH_PORT: '65002'
  SSH_USER: 'u790739895'
  REMOTE_THEME_PATH: './wp-content/themes/zentheme'
  REMOTE_PLUGINS_PATH: './wp-content/plugins'

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: ⚡ Checkout
        uses: actions/checkout@v4

      - name: 🔍 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🗺️ Generate Sitemaps
        run: npm run generate-sitemaps
        continue-on-error: true

      - name: 🏗️ Build Production
        run: npm run build
        env:
          NODE_ENV: production
          VITE_WP_SITE_URL: https://djzeneyer.com
          VITE_WP_REST_URL: https://djzeneyer.com/wp-json/
          VITE_WC_CONSUMER_KEY: ${{ secrets.VITE_WC_CONSUMER_KEY }}
          VITE_WC_CONSUMER_SECRET: ${{ secrets.VITE_WC_CONSUMER_SECRET }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}

      - name: 📋 List Build Output
        run: |
          echo "📂 Build directory contents:"
          ls -lah dist/
          echo ""
          echo "🗺️ Sitemap files:"
          ls -lah dist/sitemap* 2>/dev/null || echo "No sitemap files found"

      - name: 📤 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: dist/
          retention-days: 7
          compression-level: 9

  deploy:
    name: 🚀 Deploy
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: production
      url: https://djzeneyer.com

    steps:
      - name: ⚡ Checkout
        uses: actions/checkout@v4

      - name: 📥 Download Build
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: dist/

      - name: 🔑 Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -p ${{ env.SSH_PORT }} -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: 🧪 Test SSH Connection & Ensure Remote Directories Exist
        run: |
          ssh -i ~/.ssh/deploy_key \
            -p ${{ env.SSH_PORT }} \
            -o StrictHostKeyChecking=no \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }} \
            "mkdir -p ${{ env.REMOTE_THEME_PATH }}/dist ${{ env.REMOTE_PLUGINS_PATH }} && echo '✅ Remote directories ready'"

      - name: ⚛️ Deploy React App (Clean Slate)
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            ./dist/ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.REMOTE_THEME_PATH }}/dist/

      - name: 🎨 Deploy Theme Files (Smart Sync)
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='dist' \
            --exclude='public' \
            --exclude='src' \
            --exclude='.github' \
            --exclude='scripts' \
            --exclude='package*.json' \
            --exclude='tsconfig*.json' \
            --exclude='vite.config.*' \
            --exclude='eslint.config.*' \
            --exclude='postcss.config.*' \
            --exclude='tailwind.config.*' \
            --exclude='*.md' \
            --exclude='wp-content' \
            --exclude='plugins' \
            --exclude='.env*' \
            ./ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.REMOTE_THEME_PATH }}/

      - name: 🧩 Deploy Custom Plugins (NEW!)
        run: |
          if [ -d "plugins" ] && [ "$(ls -A plugins/)" ]; then
            cd plugins
            for plugin in */; do
              plugin_name="${plugin%/}"
              echo "🚀 Deploying plugin: $plugin_name"
              rsync -avz \
                -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
                "$plugin" \
                ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.REMOTE_PLUGINS_PATH }}/
            done
            cd ..
            echo "✅ All plugins deployed"
          else
            echo "ℹ️ No plugins found in /plugins directory"
          fi

      - name: 🗺️ Deploy Sitemaps to Root
        run: |
          rsync -avz \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            --include='sitemap*.xml' \
            --exclude='*' \
            ./dist/ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:./

      - name: 🌐 Deploy Public Assets to Root
        run: |
          rsync -avz \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            --include='robots.txt' \
            --include='favicon*' \
            --include='*.png' \
            --include='*.ico' \
            --include='*.svg' \
            --include='*.webmanifest' \
            --exclude='assets/' \
            --exclude='index.html' \
            --exclude='sitemap*.xml' \
            --exclude='*' \
            ./dist/ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:./

      - name: 🔍 Verify Sitemap Deployment
        run: |
          ssh -i ~/.ssh/deploy_key \
            -p ${{ env.SSH_PORT }} \
            -o StrictHostKeyChecking=no \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }} \
            "ls -lah sitemap*.xml 2>/dev/null || echo '⚠️ No sitemaps found in root'"

      - name: 🧹 Cleanup SSH Key
        if: always()
        run: rm -f ~/.ssh/deploy_key

      - name: ✅ Deployment Summary
        run: |
          echo "### ✨ Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🌐 **Site:** https://djzeneyer.com" >> $GITHUB_STEP_SUMMARY
          echo "📦 **Commit:** \`${GITHUB_SHA::7}\`" >> $GITHUB_STEP_SUMMARY
          echo "👤 **Triggered by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "🗺️ **Sitemaps:** Generated & Deployed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Deployed Files" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ React App → \`/wp-content/themes/zentheme/dist/\`" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Theme Files → \`/wp-content/themes/zentheme/\` (OLD BUILD FILES REMOVED)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Custom Plugins → \`/wp-content/plugins/\` (FROM /plugins DIR)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Sitemaps → \`/sitemap*.xml\` (ROOT)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Public Assets → \`/robots.txt, /favicon*, etc.\` (ROOT)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🛡️ Excluded from Deploy" >> $GITHUB_STEP_SUMMARY
          echo "- wp-content/ (WordPress data safe)" >> $GITHUB_STEP_SUMMARY
          echo "- .env* (Environment secrets safe)" >> $GITHUB_STEP_SUMMARY
          echo "- plugins/ (GitHub /plugins → WordPress /wp-content/plugins)" >> $GITHUB_STEP_SUMMARY
          echo "- node_modules/ (Build artifacts excluded)" >> $GITHUB_STEP_SUMMARY
