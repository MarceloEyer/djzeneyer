name: 🚀 Production Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: production-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

env:
  NODE_VERSION: '20'
  SSH_HOST: '147.79.84.222'
  SSH_PORT: '65002'
  SSH_USER: 'u790739895'
  REMOTE_THEME_PATH: './wp-content/themes/zentheme'
  REMOTE_PLUGINS_PATH: './wp-content/plugins'

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      build_status: ${{ job.status }}
      build_time: ${{ steps.build_time.outputs.duration }}

    steps:
      - name: ⚡ Checkout
        uses: actions/checkout@v4

      - name: 🔍 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🗺️ Generate Sitemaps
        id: sitemaps
        run: npm run generate-sitemaps 2>&1 | tee sitemap.log
        continue-on-error: true

      - name: 🏗️ Build Production
        id: build
        run: npm run build
        env:
          NODE_ENV: production
          VITE_WP_SITE_URL: https://djzeneyer.com
          VITE_WP_REST_URL: https://djzeneyer.com/wp-json/
          VITE_WC_CONSUMER_KEY: ${{ secrets.VITE_WC_CONSUMER_KEY }}
          VITE_WC_CONSUMER_SECRET: ${{ secrets.VITE_WC_CONSUMER_SECRET }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}

      - name: ⏱️ Record Build Time
        id: build_time
        run: echo "duration=$(date +%s%N | cut -b1-13)" >> $GITHUB_OUTPUT

      - name: 📤 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: dist/
          retention-days: 7
          compression-level: 9

  deploy:
    name: 🚀 Deploy
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: production
      url: https://djzeneyer.com

    steps:
      - name: ⚡ Checkout
        uses: actions/checkout@v4

      - name: 📥 Download Build
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: dist/

      - name: 🔑 Setup SSH Key
        id: ssh
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -p ${{ env.SSH_PORT }} -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts 2>&1
          echo "✅ SSH setup complete" >> $GITHUB_OUTPUT

      - name: 🧪 Test SSH Connection
        id: ssh_test
        run: |
          ssh -i ~/.ssh/deploy_key \
            -p ${{ env.SSH_PORT }} \
            -o StrictHostKeyChecking=no \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }} \
            "mkdir -p ${{ env.REMOTE_THEME_PATH }}/dist ${{ env.REMOTE_PLUGINS_PATH }}" && \
          echo "✅ Remote directories ready"

      - name: ⚛️ Deploy React App
        id: react_deploy
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            ./dist/ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.REMOTE_THEME_PATH }}/dist/ 2>&1 | tee react_deploy.log
          echo "✅ React build deployed"

      - name: 🎨 Deploy Theme Files
        id: theme_deploy
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='dist' \
            --exclude='public' \
            --exclude='src' \
            --exclude='.github' \
            --exclude='scripts' \
            --exclude='package*.json' \
            --exclude='tsconfig*.json' \
            --exclude='vite.config.*' \
            --exclude='eslint.config.*' \
            --exclude='postcss.config.*' \
            --exclude='tailwind.config.*' \
            --exclude='*.md' \
            --exclude='wp-content' \
            --exclude='plugins' \
            --exclude='.env*' \
            ./ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.REMOTE_THEME_PATH }}/ 2>&1 | tee theme_deploy.log
          echo "✅ Theme files deployed"

      - name: 🧩 Deploy Custom Plugins
        id: plugins_deploy
        run: |
          if [ -d "plugins" ] && [ "$(ls -A plugins/)" ]; then
            PLUGIN_COUNT=$(ls -d plugins/*/ | wc -l)
            echo "📦 Deploying $PLUGIN_COUNT plugin(s)..."
            
            for plugin_dir in plugins/*/; do
              plugin_name=$(basename "$plugin_dir")
              rsync -avz \
                -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
                "$plugin_dir" \
                ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.REMOTE_PLUGINS_PATH }}/ 2>&1 | tee -a plugins_deploy.log
              echo "  ✅ $plugin_name"
            done
            echo "PLUGINS=$PLUGIN_COUNT" >> $GITHUB_OUTPUT
          else
            echo "⏭️ No custom plugins to deploy"
            echo "PLUGINS=0" >> $GITHUB_OUTPUT
          fi

      - name: 🗺️ Deploy Sitemaps & Assets
        id: assets_deploy
        run: |
          # Sitemaps
          rsync -avz \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            --include='sitemap*.xml' \
            --exclude='*' \
            ./dist/ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:./ 2>&1 | tee assets_deploy.log
          
          # Public assets
          rsync -avz \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            --include='robots.txt' \
            --include='favicon*' \
            --include='*.png' \
            --include='*.ico' \
            --include='*.svg' \
            --include='*.webmanifest' \
            --exclude='*' \
            ./dist/ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:./ 2>&1 | tee -a assets_deploy.log
          echo "✅ Sitemaps & assets deployed"

      - name: 🔍 Verify Deployment
        id: verify
        run: |
          SITEMAPS=$(ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "ls -1 sitemap*.xml 2>/dev/null | wc -l")
          THEME_FILES=$(ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "find ${{ env.REMOTE_THEME_PATH }} -type f 2>/dev/null | wc -l")
          PLUGINS=$(ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "ls -1d ${{ env.REMOTE_PLUGINS_PATH }}/*/ 2>/dev/null | wc -l")
          
          echo "SITEMAPS=$SITEMAPS" >> $GITHUB_OUTPUT
          echo "THEME_FILES=$THEME_FILES" >> $GITHUB_OUTPUT
          echo "PLUGINS=$PLUGINS" >> $GITHUB_OUTPUT

      - name: 🧹 Cleanup SSH Key
        if: always()
        run: rm -f ~/.ssh/deploy_key

      - name: 📊 Generate Deployment Report
        if: always()
        run: |
          cat > deploy_report.txt << 'EOF'
          🚀 DJ ZEN EYER - DEPLOYMENT REPORT
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          
          📋 DEPLOYMENT SUMMARY
          ──────────────────────
          Site: https://djzeneyer.com
          Commit: ${{ github.sha }}
          Author: @${{ github.actor }}
          Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          Branch: ${{ github.ref }}
          
          ✅ DEPLOYED SUCCESSFULLY
          ────────────────────────
          1️⃣  React Build ........... ${{ steps.react_deploy.outcome }}
          2️⃣  Theme Files ........... ${{ steps.theme_deploy.outcome }}
          3️⃣  Custom Plugins (${{ steps.plugins_deploy.outputs.PLUGINS }}) ...... ${{ steps.plugins_deploy.outcome }}
          4️⃣  Sitemaps & Assets .... ${{ steps.assets_deploy.outcome }}
          
          📊 DEPLOYMENT METRICS
          ──────────────────────
          Files in theme: ${{ steps.verify.outputs.THEME_FILES }}
          Sitemaps deployed: ${{ steps.verify.outputs.SITEMAPS }}
          Plugins deployed: ${{ steps.verify.outputs.PLUGINS }}
          
          ⚙️ BUILD INFO
          ──────────────
          Node version: ${{ env.NODE_VERSION }}
          Build status: ${{ needs.build.outputs.build_status }}
          
          🔗 VIEW LOGS
          ────────────
          GitHub Actions: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          ✨ NEXT STEPS
          ──────────────
          1. Visit: https://djzeneyer.com
          2. Hard refresh: Ctrl+Shift+R
          3. Check sitemaps: https://djzeneyer.com/sitemap_index.xml
          4. Verify plugins in WordPress admin
          
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          EOF
          cat deploy_report.txt

      - name: 📤 Upload Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deployment-report
          path: deploy_report.txt
          retention-days: 30

      - name: 🎯 Final Status Check
        if: always()
        run: |
          if [[ "${{ steps.react_deploy.outcome }}" == "success" && \
                "${{ steps.theme_deploy.outcome }}" == "success" && \
                "${{ steps.assets_deploy.outcome }}" == "success" ]]; then
            echo "✅ DEPLOYMENT SUCCESSFUL!"
            exit 0
          else
            echo "⚠️ DEPLOYMENT COMPLETED WITH WARNINGS"
            echo "Check logs above for details"
            exit 1
          fi
