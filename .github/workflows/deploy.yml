name: 🚀 Production Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: production-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

env:
  NODE_VERSION: '20'
  SSH_HOST: '147.79.84.222'
  SSH_PORT: '65002'
  SSH_USER: 'u790739895'
  REMOTE_THEME_PATH: './wp-content/themes/zentheme'
  REMOTE_PLUGINS_PATH: './wp-content/plugins'

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: ⚡ Checkout
        uses: actions/checkout@v4

      - name: 🔍 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🗺️ Generate Sitemaps
        run: npm run generate-sitemaps
        continue-on-error: true

      - name: 🏗️ Build Production
        run: npm run build
        env:
          NODE_ENV: production
          VITE_WP_SITE_URL: https://djzeneyer.com
          VITE_WP_REST_URL: https://djzeneyer.com/wp-json/
          VITE_WC_CONSUMER_KEY: ${{ secrets.VITE_WC_CONSUMER_KEY }}
          VITE_WC_CONSUMER_SECRET: ${{ secrets.VITE_WC_CONSUMER_SECRET }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}

      - name: 📋 List Build Output
        run: |
          echo "📂 Build directory contents:"
          ls -lah dist/
          echo ""
          echo "🗺️ Sitemap files:"
          ls -lah dist/sitemap* 2>/dev/null || echo "No sitemap files found"

      - name: 📤 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: dist/
          retention-days: 7
          compression-level: 9

  deploy:
    name: 🚀 Deploy
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: production
      url: https://djzeneyer.com

    steps:
      - name: ⚡ Checkout
        uses: actions/checkout@v4

      - name: 📥 Download Build
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: dist/

      - name: 🔑 Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -p ${{ env.SSH_PORT }} -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: 🧪 Test SSH Connection & Ensure Remote Directories Exist
        run: |
          ssh -i ~/.ssh/deploy_key \
            -p ${{ env.SSH_PORT }} \
            -o StrictHostKeyChecking=no \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }} \
            "mkdir -p ${{ env.REMOTE_THEME_PATH }}/dist ${{ env.REMOTE_PLUGINS_PATH }} && echo '✅ Remote directories ready'"

      - name: ⚛️ Deploy React App (Clean Slate)
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            ./dist/ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.REMOTE_THEME_PATH }}/dist/

      - name: 🎨 Deploy Theme Files (Smart Sync)
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='dist' \
            --exclude='public' \
            --exclude='src' \
            --exclude='.github' \
            --exclude='scripts' \
            --exclude='package*.json' \
            --exclude='tsconfig*.json' \
            --exclude='vite.config.*' \
            --exclude='eslint.config.*' \
            --exclude='postcss.config.*' \
            --exclude='tailwind.config.*' \
            --exclude='*.md' \
            --exclude='wp-content' \
            --exclude='plugins' \
            --exclude='.env*' \
            ./ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.REMOTE_THEME_PATH }}/

      - name: 🧩 Deploy Custom Plugins (NEW!)
        run: |
          if [ -d "plugins" ] && [ "$(ls -A plugins/)" ]; then
            cd plugins
            for plugin in */; do
              plugin_name="${plugin%/}"
              echo "🚀 Deploying plugin: $plugin_name"
              rsync -avz \
                -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
                "$plugin" \
                ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.REMOTE_PLUGINS_PATH }}/
            done
            cd ..
            echo "✅ All plugins deployed"
          else
            echo "ℹ️ No plugins found in /plugins directory"
          fi

      - name: 🗺️ Deploy Sitemaps to Root
        run: |
          rsync -avz \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            --include='sitemap*.xml' \
            --exclude='*' \
            ./dist/ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:./

      - name: 🌐 Deploy Public Assets to Root
        run: |
          rsync -avz \
            -e "ssh -i ~/.ssh/deploy_key -p ${{ env.SSH_PORT }} -o StrictHostKeyChecking=no" \
            --include='robots.txt' \
            --include='favicon*' \
            --include='*.png' \
            --include='*.ico' \
            --include='*.svg' \
            --include='*.webmanifest' \
            --exclude='assets/' \
            --exclude='index.html' \
            --exclude='sitemap*.xml' \
            --exclude='*' \
            ./dist/ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:./

      - name: 🔍 Verify Sitemap Deployment
        run: |
          ssh -i ~/.ssh/deploy_key \
            -p ${{ env.SSH_PORT }} \
            -o StrictHostKeyChecking=no \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }} \
            "ls -lah sitemap*.xml 2>/dev/null || echo '⚠️ No sitemaps found in root'"

      - name: 🧹 Cleanup SSH Key
        if: always()
        run: rm -f ~/.ssh/deploy_key

      - name: 📊 COPY THIS LOG & PASTE HERE ➜
        run: |
          cat << 'EOF'
          
          ╔════════════════════════════════════════════════════════════════════════════════╗
          ║                   ✅ DJ ZEN EYER - DEPLOY SUCCESS                            ║
          ║                        COPY EVERYTHING BELOW                                   ║
          ╚════════════════════════════════════════════════════════════════════════════════╝
          
          🚀 DEPLOYMENT REPORT
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          
          🌐 SITE: https://djzeneyer.com
          📦 COMMIT HASH: ${{ github.sha }}
          🔗 SHORT HASH: ${{ github.sha }}
          👤 DEPLOYED BY: @${{ github.actor }}
          ⏱️ TIMESTAMP: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          📍 BRANCH: ${{ github.ref }}
          🔄 RUN ID: ${{ github.run_id }}
          
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          ✅ DEPLOYED COMPONENTS
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          
          1️⃣  REACT BUILD (Vite)
              Location: /wp-content/themes/zentheme/dist/
              Status: ✅ DEPLOYED
              Mode: Clean (old files removed)
              
          2️⃣  THEME FILES
              Location: /wp-content/themes/zentheme/
              Status: ✅ DEPLOYED
              Mode: Smart Sync (old builds deleted)
              
          3️⃣  CUSTOM PLUGINS
              Location: /wp-content/plugins/
              Status: ✅ DEPLOYED
              Source: /plugins/ directory in GitHub
              
          4️⃣  SITEMAPS
              Location: / (root)
              Files: sitemap*.xml
              Status: ✅ DEPLOYED
              
          5️⃣  PUBLIC ASSETS
              Location: / (root)
              Files: robots.txt, favicon*, *.png, *.ico, *.svg, *.webmanifest
              Status: ✅ DEPLOYED
          
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          🛡️ SECURITY & EXCLUDES
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          
          ✅ wp-content/ → EXCLUDED (WordPress data safe)
          ✅ .env* files → EXCLUDED (Secrets safe)
          ✅ /plugins directory → EXCLUDED (only contents deployed)
          ✅ node_modules/ → EXCLUDED
          ✅ .git* files → EXCLUDED
          ✅ SSH key → AUTO-CLEANED
          
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          ✨ NEXT STEPS TO VERIFY
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          
          1. 🌐 Open: https://djzeneyer.com
          2. ♻️ Hard refresh: Ctrl+Shift+R (or Cmd+Shift+R on Mac)
          3. ✅ Check: Theme looks good?
          4. 📋 Check: Sitemaps at https://djzeneyer.com/sitemap_index.xml
          5. 🔌 Check: Plugins activated in WordPress?
          6. 📊 Check: Site functionality working?
          
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          📞 TROUBLESHOOTING
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          
          ❌ Theme not updating?
             → Check: /wp-content/themes/zentheme/ exists on server
             → Check: SSH permissions (755 on directories, 644 on files)
          
          ❌ Plugins not working?
             → Check: /wp-content/plugins/ has plugins deployed
             → Check: Activate in WordPress admin
          
          ❌ Sitemaps missing?
             → Check: /sitemap*.xml in root (via FTP or SSH)
             → Check: Regenerate in WordPress SEO plugin
          
          ❌ Build failed?
             → Check: npm run build works locally
             → Check: All environment variables set in GitHub Secrets
          
          ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
          
          ✅ DEPLOY COMPLETED SUCCESSFULLY!
          
          For issues, check GitHub Actions logs:
          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          ╚════════════════════════════════════════════════════════════════════════════════╝
          
          EOF
