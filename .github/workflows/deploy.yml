name: 🚀 Production Deploy - DJ ZEN EYER
on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
      - 'LICENSE'
  workflow_dispatch:
concurrency:
  group: production-deploy
  cancel-in-progress: false
permissions:
  contents: read
  deployments: write
env:
  NODE_VERSION: '20'
  SSH_HOST: '147.79.84.222'
  SSH_PORT: '65002'
  SSH_USER: 'u790739895'
  THEME_DIR: '/home/u790739895/domains/djzeneyer.com/public_html/wp-content/themes/zentheme'
  PLUGINS_DIR: '/home/u790739895/domains/djzeneyer.com/public_html/wp-content/plugins'
  WEB_ROOT: '/home/u790739895/domains/djzeneyer.com/public_html'
  BACKUP_DIR: '/home/u790739895/backups'

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      status: ${{ job.status }}
      hash: ${{ steps.hash.outputs.value }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔖 Get commit hash
        id: hash
        run: echo "value=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🛠️ Build project
        run: npm run build
        env:
          NODE_ENV: production
          VITE_WP_SITE_URL: https://djzeneyer.com
          VITE_WP_REST_URL: https://djzeneyer.com/wp-json/
          VITE_WC_CONSUMER_KEY: ${{ secrets.VITE_WC_CONSUMER_KEY }}
          VITE_WC_CONSUMER_SECRET: ${{ secrets.VITE_WC_CONSUMER_SECRET }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}

      - name: 📂 Verify build output
        run: |
          [ -d dist ] && [ -f dist/index.html ] && [ -s dist/index.html ] || exit 1

      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ steps.hash.outputs.value }}
          path: dist/
          retention-days: 7

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: build
    if: needs.build.result == 'success'
    environment:
      name: production
      url: https://djzeneyer.com

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ needs.build.outputs.hash }}
          path: dist/

      - name: ✅ Verify artifact
        run: |
          echo "🔍 Verificando se o build foi baixado..."
          ls -la dist/ || exit 1
          [ -f dist/index.html ] || exit 1
          echo "✅ Build pronto: $(du -sh dist | cut -f1)"

      - name: 🔑 Setup SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ env.SSH_PORT }} -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts 2>/dev/null
          ssh -p ${{ env.SSH_PORT }} -o ConnectTimeout=10 ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "echo '🔑 Conexão SSH estabelecida com sucesso!' || exit 1"

      - name: 💾 Backup theme
        run: |
          ssh -p ${{ env.SSH_PORT }} -o ConnectTimeout=10 ${{ env.SSH_USER }}@${{ env.SSH_HOST }} << 'BACKUP'
          mkdir -p "${{ env.BACKUP_DIR }}"
          BACKUP_TS=$(date +%Y%m%d_%H%M%S)
          tar -czf "${{ env.BACKUP_DIR }}/theme_${BACKUP_TS}.tar.gz" -C "${{ env.THEME_DIR }}" .
          ls -lh "${{ env.BACKUP_DIR }}/theme_${BACKUP_TS}.tar.gz" || exit 1
          cd "${{ env.BACKUP_DIR }}"
          ls -t theme_*.tar.gz | tail -n +6 | xargs -r rm
          BACKUP

      - name: 📤 Deploy theme
        run: |
          echo "🚀 Enviando tema para o servidor..."
          rsync -avz --delete --checksum \
            -e "ssh -p ${{ env.SSH_PORT }} -o ConnectTimeout=10" \
            --exclude='.git/' \
            --exclude='.gitignore' \
            --exclude='.gitattributes' \
            --exclude='node_modules/' \
            --exclude='npm-debug.log*' \
            --exclude='yarn-debug.log*' \
            --exclude='yarn-error.log*' \
            --exclude='package-lock.json' \
            --exclude='dist/' \
            --exclude='build/' \
            --exclude='.cache/' \
            --exclude='src/' \
            --exclude='public/' \
            --exclude='.env' \
            --exclude='.env.*' \
            --exclude='.editorconfig' \
            --exclude='.prettierrc' \
            --exclude='.prettierignore' \
            --exclude='.eslintrc*' \
            --exclude='eslint.config.*' \
            --exclude='tsconfig.json' \
            --exclude='tsconfig.node.json' \
            --exclude='vite.config.*' \
            --exclude='tailwind.config.*' \
            --exclude='postcss.config.*' \
            --exclude='docs/' \
            --exclude='*.md' \
            --exclude='README*' \
            --exclude='LICENSE' \
            --exclude='CHANGELOG*' \
            --exclude='.vscode/' \
            --exclude='.idea/' \
            --exclude='*.swp' \
            --exclude='*.swo' \
            --exclude='*~' \
            --exclude='.DS_Store' \
            --exclude='.github/' \
            --exclude='scripts/' \
            --exclude='test/' \
            --exclude='tests/' \
            --exclude='__tests__/' \
            --exclude='*.test.*' \
            --exclude='*.spec.*' \
            --exclude='.htaccess' \
            --exclude='wp-config.php' \
            --exclude='wp-content/uploads/' \
            --exclude='wp-content/cache/' \
            --exclude='wp-content/upgrade/' \
            --exclude='*.log' \
            --exclude='logs/' \
            --exclude='tmp/' \
            --exclude='temp/' \
            --exclude='*.tmp' \
            ./ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.THEME_DIR }}/

      - name: 📤 Deploy build to dist/
        run: |
          echo "🚀 Enviando build para ${{ env.THEME_DIR }}/dist..."
          rsync -avz --delete --checksum \
            -e "ssh -p ${{ env.SSH_PORT }} -o ConnectTimeout=10" \
            dist/ \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.THEME_DIR }}/dist/ || exit 1
          echo "✅ Build enviado com sucesso!"

      - name: 📤 Deploy plugins
        if: hashFiles('plugins/**') != ''
        run: |
          REPO_PLUGINS=$(find plugins -mindepth 1 -maxdepth 1 -type d -exec basename {} \;)
          if [ -z "$REPO_PLUGINS" ]; then
            echo "ℹ️ Nenhum plugin para enviar."
            exit 0
          fi
          echo "📤 Enviando plugins..."
          for plugin in $REPO_PLUGINS; do
            rsync -avz -e "ssh -p ${{ env.SSH_PORT }} -o ConnectTimeout=10" \
              --exclude='.git/' \
              --exclude='node_modules/' \
              --exclude='*.log' \
              "plugins/$plugin/" \
              "${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.PLUGINS_DIR }}/$plugin/"
          done
          echo "✅ Plugins enviados com sucesso!"

      - name: 📤 Deploy sitemaps
        if: hashFiles('dist/sitemap*.xml') != ''
        run: |
          echo "🚀 Enviando sitemaps..."
          rsync -avz -e "ssh -p ${{ env.SSH_PORT }} -o ConnectTimeout=10" \
            --include='sitemap*.xml' --exclude='*' \
            dist/ ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:${{ env.WEB_ROOT }}/
          echo "✅ Sitemaps enviados com sucesso!"

      - name: ✅ Verify deployment
        run: |
          ssh -p ${{ env.SSH_PORT }} -o ConnectTimeout=10 ${{ env.SSH_USER }}@${{ env.SSH_HOST }} << 'VERIFY'
          set -e
          echo "🔍 Verificando deploy..."
          [ -d "${{ env.THEME_DIR }}" ] || { echo "❌ Diretório do tema não encontrado"; exit 1; }
          [ -f "${{ env.THEME_DIR }}/functions.php" ] || { echo "❌ functions.php não encontrado"; exit 1; }
          [ -f "${{ env.THEME_DIR }}/index.php" ] || { echo "❌ index.php não encontrado"; exit 1; }
          [ -d "${{ env.THEME_DIR }}/dist" ] || { echo "❌ dist/ não encontrado"; exit 1; }
          [ -f "${{ env.THEME_DIR }}/dist/index.html" ] || { echo "❌ dist/index.html não encontrado"; exit 1; }
          echo "✅ Todos os arquivos verificados com sucesso!"
          VERIFY

      - name: 🧹 Cleanup
        if: always()
        run: rm -f ~/.ssh/id_rsa

  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: needs.deploy.result == 'success'

    steps:
      - name: 🌐 Check site accessibility
        run: |
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" -L https://djzeneyer.com)
          [ "$HTTP_CODE" = "200" ] && echo "✅ Site acessível!" || { echo "⚠️ HTTP $HTTP_CODE"; exit 1; }

      - name: 🔗 Check WordPress REST API
        run: |
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://djzeneyer.com/wp-json/)
          [ "$HTTP_CODE" = "200" ] && echo "✅ REST API acessível!" || echo "⚠️ HTTP $HTTP_CODE"

      - name: 🎉 Final status
        run: echo "🎉 Deploy concluído com sucesso! 🚀"
