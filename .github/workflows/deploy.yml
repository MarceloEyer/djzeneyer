# Nome da sua automação
name: Build and Deploy to Hostinger

# Gatilho: Executar sempre que houver um 'push' na branch 'main'
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest # Usar um ambiente virtual para rodar a ação
    steps:
      # 1. Baixa o código do seu repositório para o ambiente virtual
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Configura o ambiente Node.js para poder construir o projeto
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Usa uma versão recente do Node.js
          cache: 'npm' # Ativa o cache para acelerar instalações futuras

      # 3. Instala todas as dependências do seu projeto (React, Vite, etc.)
      - name: Install Dependencies
        run: npm install

      # 4. EXECUTA O BUILD! Este comando cria a pasta 'dist' com os arquivos finais.
      - name: Build Project
        run: npm run build

      # 5. Envia o conteúdo da pasta 'dist' (que agora existe) para o seu servidor via FTP
      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          
          # Origem: A pasta 'dist' que acabamos de criar no passo anterior
          local-dir: ./dist/
          
          # Destino: A pasta 'dist' dentro do seu tema no WordPress
          # (Assumindo que seu usuário FTP cai direto na pasta do tema)
          server-dir: ./dist/
          
          # Parâmetro para limpar o diretório de destino antes de enviar os arquivos novos
          dangerous-clean-slate: true
