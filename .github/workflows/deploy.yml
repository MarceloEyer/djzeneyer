name: 🚀 Production Deploy

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
  workflow_dispatch:

concurrency:
  group: production-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read
  deployments: write

env:
  NODE_VERSION: '20'
  SSH_HOST: '147.79.84.222'
  SSH_PORT: '65002'
  SSH_USER: 'u790739895'
  REMOTE_THEME_PATH: './wp-content/themes/zentheme'
  REMOTE_PLUGINS_PATH: './wp-content/plugins'
  BASE_URL: 'https://djzeneyer.com'

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    outputs:
      status: ${{ job.status }}
      hash: ${{ steps.hash.outputs.value }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - id: hash
        run: echo "value=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - run: npm ci --prefer-offline --no-audit

      - run: npm run generate-sitemaps 2>&1 || true
        continue-on-error: true

      - run: npm run build
        env:
          NODE_ENV: production
          VITE_WP_SITE_URL: https://djzeneyer.com
          VITE_WP_REST_URL: https://djzeneyer.com/wp-json/
          VITE_WC_CONSUMER_KEY: ${{ secrets.VITE_WC_CONSUMER_KEY }}
          VITE_WC_CONSUMER_SECRET: ${{ secrets.VITE_WC_CONSUMER_SECRET }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}

      - run: |
          [ -d dist ] && [ -f dist/index.html ] || exit 1

      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ steps.hash.outputs.value }}
          path: dist/
          retention-days: 7

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    if: needs.build.outputs.status == 'success'
    
    environment:
      name: production
      url: https://djzeneyer.com

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build-${{ needs.build.outputs.hash }}
          path: dist/

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ env.SSH_PORT }} ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts 2>/dev/null
          cat > ~/.ssh/config << 'EOF'
          Host prod
            HostName ${{ env.SSH_HOST }}
            Port ${{ env.SSH_PORT }}
            User ${{ env.SSH_USER }}
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking accept-new
          EOF

      - run: ssh prod "mkdir -p ${{ env.REMOTE_THEME_PATH }}/dist ${{ env.REMOTE_PLUGINS_PATH }}"

      - run: |
          rsync -avz --delete \
            -e "ssh -o ConnectTimeout=10" \
            dist/ \
            prod:${{ env.REMOTE_THEME_PATH }}/dist/

      - run: |
          rsync -avz --delete \
            -e "ssh -o ConnectTimeout=10" \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='dist' \
            --exclude='public' \
            --exclude='src' \
            --exclude='.github' \
            --exclude='scripts' \
            --exclude='package*.json' \
            --exclude='tsconfig*.json' \
            --exclude='vite.config.*' \
            --exclude='eslint.config.*' \
            --exclude='postcss.config.*' \
            --exclude='tailwind.config.*' \
            --exclude='*.md' \
            --exclude='wp-content' \
            --exclude='.env*' \
            --exclude='.DS_Store' \
            --exclude='*.log' \
            ./ \
            prod:${{ env.REMOTE_THEME_PATH }}/

      - run: |
          [ ! -d plugins ] && exit 0
          [ -z "$(ls -A plugins 2>/dev/null)" ] && exit 0
          rsync -avz \
            -e "ssh -o ConnectTimeout=10" \
            plugins/ \
            prod:${{ env.REMOTE_PLUGINS_PATH }}/

      - run: |
          [ ! -f dist/sitemap_index.xml ] && exit 0
          rsync -avz \
            --include='sitemap*.xml' \
            --exclude='*' \
            -e "ssh -o ConnectTimeout=10" \
            dist/ \
            prod:./

      - run: |
          rsync -avz \
            --include='robots.txt' \
            --include='favicon*' \
            --include='*.ico' \
            --include='*.svg' \
            --include='*.webmanifest' \
            --exclude='*' \
            -e "ssh -o ConnectTimeout=10" \
            dist/ \
            prod:./

      - run: |
          ssh prod << 'EOF'
          [ -d ./wp-content/themes/zentheme ] && echo "OK: theme" || echo "FAIL: theme"
          [ -d ./wp-content/themes/zentheme/dist ] && echo "OK: dist" || echo "FAIL: dist"
          [ -f ./robots.txt ] && echo "OK: robots.txt" || echo "WARN: robots.txt"
          EOF

      - run: rm -f ~/.ssh/id_rsa ~/.ssh/config

      - run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Deploy successful"
          else
            echo "❌ Deploy failed"
            exit 1
          fi
