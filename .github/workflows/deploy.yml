name: üöÄ Production Deploy (Enterprise Grade)

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
  workflow_dispatch:

concurrency:
  group: production-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read
  deployments: write

env:
  NODE_VERSION: '20'
  SSH_HOST: '147.79.84.222'
  SSH_PORT: '65002'
  SSH_USER: 'u790739895'
  REMOTE_THEME_PATH: './wp-content/themes/zentheme'
  REMOTE_PLUGINS_PATH: './wp-content/plugins'
  BASE_URL: 'https://djzeneyer.com'

jobs:
  # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  # üèóÔ∏è BUILD JOB
  # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

  build:
    name: üèóÔ∏è Build & Optimize
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    outputs:
      build_status: ${{ job.status }}
      sitemaps_status: ${{ steps.sitemaps.outcome }}
      build_hash: ${{ steps.hash.outputs.build_hash }}

    steps:
      - name: ‚ö° Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîç Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: üìä Generate Build Hash
        id: hash
        run: |
          BUILD_HASH=$(git rev-parse --short HEAD)
          echo "build_hash=$BUILD_HASH" >> $GITHUB_OUTPUT
          echo "Build hash: $BUILD_HASH"

      - name: üì¶ Install Dependencies
        run: |
          echo "üîÑ Installing npm dependencies..."
          npm ci --prefer-offline --no-audit --ignore-scripts
          echo "‚úÖ Dependencies installed"

      - name: üó∫Ô∏è Generate Sitemaps
        id: sitemaps
        run: |
          echo "üó∫Ô∏è Generating sitemaps..."
          npm run generate-sitemaps 2>&1 | tee sitemap.log || true
          
          SITEMAP_COUNT=$(find dist -name "sitemap*.xml" 2>/dev/null | wc -l || echo "0")
          echo "üìä Generated $SITEMAP_COUNT sitemaps"
        continue-on-error: true

      - name: üèóÔ∏è Build Production Assets
        id: build
        run: |
          echo "üî® Building production assets..."
          npm run build 2>&1 | tee build.log
          
          if [ $? -ne 0 ]; then
            echo "‚ùå Build failed"
            tail -50 build.log
            exit 1
          fi
          
          BUILD_SIZE=$(du -sh dist/ 2>/dev/null | awk '{print $1}')
          FILE_COUNT=$(find dist/ -type f 2>/dev/null | wc -l)
          
          echo "üìä Build Statistics:"
          echo "   Size: $BUILD_SIZE"
          echo "   Files: $FILE_COUNT"
          echo "‚úÖ Build completed successfully"
        env:
          NODE_ENV: production
          VITE_WP_SITE_URL: https://djzeneyer.com
          VITE_WP_REST_URL: https://djzeneyer.com/wp-json/
          VITE_WC_CONSUMER_KEY: ${{ secrets.VITE_WC_CONSUMER_KEY }}
          VITE_WC_CONSUMER_SECRET: ${{ secrets.VITE_WC_CONSUMER_SECRET }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}

      - name: üîç Validate Build Output
        run: |
          echo "üîç Validating build output..."
          [ -d dist ] || { echo "‚ùå dist/ folder missing"; exit 1; }
          [ -f dist/index.html ] || { echo "‚ùå index.html missing"; exit 1; }
          echo "‚úÖ Build validation passed"

      - name: üì§ Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-build-${{ steps.hash.outputs.build_hash }}
          path: dist/
          retention-days: 7
          compression-level: 9
          if-no-files-found: error

  # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  # üöÄ DEPLOY JOB
  # ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

  deploy:
    name: üöÄ Deploy to Production
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    if: needs.build.outputs.build_status == 'success'
    
    environment:
      name: production
      url: https://djzeneyer.com

    steps:
      - name: ‚ö° Checkout Repository
        uses: actions/checkout@v4

      - name: üì• Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: production-build-${{ needs.build.outputs.build_hash }}
          path: dist/

      - name: üîë Configure SSH (Hardened)
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          ssh-keyscan -p ${{ env.SSH_PORT }} -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts 2>&1
          chmod 644 ~/.ssh/known_hosts
          
          cat > ~/.ssh/config << 'SSH_CONFIG'
          Host production
              HostName ${{ env.SSH_HOST }}
              Port ${{ env.SSH_PORT }}
              User ${{ env.SSH_USER }}
              IdentityFile ~/.ssh/deploy_key
              StrictHostKeyChecking accept-new
              UserKnownHostsFile ~/.ssh/known_hosts
              ConnectTimeout 10
              ServerAliveInterval 60
              ServerAliveCountMax 3
          SSH_CONFIG
          chmod 644 ~/.ssh/config
          
          echo "‚úÖ SSH configured"

      - name: üß™ Test SSH Connection
        id: ssh_test
        run: |
          set +e
          
          echo "üîó Testing SSH connection..."
          ssh -o ConnectTimeout=10 production \
            "mkdir -p ${{ env.REMOTE_THEME_PATH }}/dist ${{ env.REMOTE_PLUGINS_PATH }} && echo '‚úÖ Remote ready'" \
            > /tmp/ssh_test.log 2>&1
          
          if [ $? -eq 0 ]; then
            echo "SSH_OK=true" >> $GITHUB_OUTPUT
            echo "‚úÖ SSH connection successful"
          else
            echo "SSH_OK=false" >> $GITHUB_OUTPUT
            echo "‚ùå SSH connection failed!"
            cat /tmp/ssh_test.log
            exit 1
          fi
          
          set -e

      - name: ‚öõÔ∏è Deploy React Build
        id: react_deploy
        if: steps.ssh_test.outputs.SSH_OK == 'true'
        run: |
          set +e
          echo "üì§ Uploading React build..."
          
          rsync -avz --delete --progress \
            -e "ssh -o ConnectTimeout=10" \
            dist/ \
            production:${{ env.REMOTE_THEME_PATH }}/dist/
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ React build deployed"
          else
            echo "‚ùå React deployment failed"
            exit 1
          fi

      - name: üé® Deploy Theme & Plugins
        id: theme_deploy
        if: steps.ssh_test.outputs.SSH_OK == 'true'
        run: |
          set +e
          echo "üì§ Uploading theme files and plugins..."
          
          rsync -avz --delete --progress \
            -e "ssh -o ConnectTimeout=10" \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='dist' \
            --exclude='public' \
            --exclude='src' \
            --exclude='.github' \
            --exclude='scripts' \
            --exclude='package*.json' \
            --exclude='tsconfig*.json' \
            --exclude='vite.config.*' \
            --exclude='eslint.config.*' \
            --exclude='postcss.config.*' \
            --exclude='tailwind.config.*' \
            --exclude='*.md' \
            --exclude='wp-content' \
            --exclude='.env*' \
            --exclude='.DS_Store' \
            --exclude='*.log' \
            ./ \
            production:${{ env.REMOTE_THEME_PATH }}/
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ Theme and plugins deployed"
          else
            echo "‚ùå Theme deployment failed"
            exit 1
          fi

      - name: üó∫Ô∏è Deploy Sitemaps
        id: sitemaps_deploy
        if: steps.ssh_test.outputs.SSH_OK == 'true'
        run: |
          set +e
          
          SITEMAP_COUNT=$(find dist -name 'sitemap*.xml' 2>/dev/null | wc -l || echo "0")
          
          if [ $SITEMAP_COUNT -gt 0 ]; then
            rsync -avz --progress \
              --include='sitemap*.xml' \
              --exclude='*' \
              -e "ssh -o ConnectTimeout=10" \
              dist/ \
              production:./
            
            if [ $? -eq 0 ]; then
              echo "‚úÖ Sitemaps deployed"
            else
              echo "‚ö†Ô∏è Sitemap upload had issues"
            fi
          else
            echo "‚ö†Ô∏è No sitemaps in build"
          fi

      - name: üåê Deploy Public Assets
        id: assets_deploy
        if: steps.ssh_test.outputs.SSH_OK == 'true'
        run: |
          set +e
          
          rsync -avz --progress \
            --include='robots.txt' \
            --include='favicon*' \
            --include='*.png' \
            --include='*.ico' \
            --include='*.svg' \
            --include='*.webmanifest' \
            --exclude='*' \
            -e "ssh -o ConnectTimeout=10" \
            dist/ \
            production:./
          
          [ $? -eq 0 ] && echo "‚úÖ Public assets deployed"

      - name: üîç Verify Deployment
        id: verify
        if: steps.ssh_test.outputs.SSH_OK == 'true'
        run: |
          echo "üîç Verifying deployment..."
          
          ssh -o ConnectTimeout=10 production << 'VERIFY_EOF'
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
          echo "‚úÖ VERIFICATION REPORT"
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
          [ -d ./wp-content/themes/zentheme ] && echo "‚úÖ Theme folder" || echo "‚ùå Theme folder"
          [ -d ./wp-content/themes/zentheme/dist ] && echo "‚úÖ Dist folder" || echo "‚ùå Dist folder"
          THEME_FILES=$(find ./wp-content/themes/zentheme -type f 2>/dev/null | wc -l)
          echo "üìÑ Theme files: $THEME_FILES"
          echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
          VERIFY_EOF

      - name: üßπ Cleanup SSH
        if: always()
        run: rm -f ~/.ssh/deploy_key ~/.ssh/config

      - name: üìä Generate Report
        if: always()
        run: |
          cat > DEPLOY_REPORT.md << 'EOF'
          # üöÄ DJ ZEN EYER - DEPLOYMENT REPORT
          
          ## üìã DEPLOYMENT INFO
          
          | Field | Value |
          |-------|-------|
          | **Timestamp** | $(date -u '+%Y-%m-%d %H:%M:%S UTC') |
          | **Commit** | ${{ github.sha }} |
          | **Author** | @${{ github.actor }} |
          | **Branch** | ${{ github.ref_name }} |
          | **Site** | https://djzeneyer.com |
          
          ## ‚úÖ STATUS
          
          | Component | Status |
          |-----------|--------|
          | Build | ${{ needs.build.outputs.build_status == 'success' && '‚úÖ Success' || '‚ùå Failed' }} |
          | Sitemaps | ${{ needs.build.outputs.sitemaps_status == 'success' && '‚úÖ Generated' || '‚è≠Ô∏è Skipped' }} |
          | SSH | ${{ steps.ssh_test.outputs.SSH_OK == 'true' && '‚úÖ Connected' || '‚ùå Failed' }} |
          | React | ${{ steps.react_deploy.outcome == 'success' && '‚úÖ Deployed' || '‚ùå Failed' }} |
          | Theme | ${{ steps.theme_deploy.outcome == 'success' && '‚úÖ Deployed' || '‚ùå Failed' }} |
          | Sitemaps Deploy | ${{ steps.sitemaps_deploy.outcome == 'success' && '‚úÖ Deployed' || '‚è≠Ô∏è Skipped' }} |
          | Assets | ${{ steps.assets_deploy.outcome == 'success' && '‚úÖ Deployed' || '‚è≠Ô∏è Skipped' }} |
          
          ## üìù FINAL STATUS
          
          **Overall:** ${{ steps.react_deploy.outcome == 'success' && steps.theme_deploy.outcome == 'success' && '‚úÖ SUCCESS' || '‚ùå FAILED' }}
          
          ## ‚úÖ POST-DEPLOYMENT CHECKLIST
          
          - [ ] Visit https://djzeneyer.com
          - [ ] Hard refresh: Ctrl+Shift+R
          - [ ] Check sitemaps: https://djzeneyer.com/sitemap_index.xml
          - [ ] Check admin: https://djzeneyer.com/wp-admin/
          - [ ] Verify plugins active
          
          ## üîó LINKS
          
          - Site: https://djzeneyer.com
          - Admin: https://djzeneyer.com/wp-admin/
          - Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          EOF
          
          cat DEPLOY_REPORT.md

      - name: üì§ Upload Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deployment-report-${{ needs.build.outputs.build_hash }}
          path: DEPLOY_REPORT.md
          retention-days: 90

      - name: üéØ Final Status
        if: always()
        run: |
          echo ""
          echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
          echo "‚ïë    üöÄ DEPLOYMENT SUMMARY               ‚ïë"
          echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
          echo ""
          echo "Build ............ ${{ needs.build.outputs.build_status }}"
          echo "React Deploy ..... ${{ steps.react_deploy.outcome }}"
          echo "Theme Deploy ..... ${{ steps.theme_deploy.outcome }}"
          echo ""
          
          if [[ "${{ steps.react_deploy.outcome }}" == "success" && \
                "${{ steps.theme_deploy.outcome }}" == "success" ]]; then
            echo "‚úÖ DEPLOYMENT SUCCESSFUL!"
            echo ""
            echo "Next: Visit https://djzeneyer.com"
          else
            echo "‚ùå DEPLOYMENT FAILED"
            exit 1
          fi
